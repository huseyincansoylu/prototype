/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransactionsImport } from './routes/transactions'
import { Route as SettingsImport } from './routes/settings'
import { Route as PricingImport } from './routes/pricing'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AgentsIndexImport } from './routes/agents/index'

// Create/Update Routes

const TransactionsRoute = TransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AgentsIndexRoute = AgentsIndexImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsImport
      parentRoute: typeof rootRoute
    }
    '/agents/': {
      id: '/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AgentsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/transactions': typeof TransactionsRoute
  '/agents': typeof AgentsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/transactions': typeof TransactionsRoute
  '/agents': typeof AgentsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/pricing': typeof PricingRoute
  '/settings': typeof SettingsRoute
  '/transactions': typeof TransactionsRoute
  '/agents/': typeof AgentsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/pricing'
    | '/settings'
    | '/transactions'
    | '/agents'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/pricing' | '/settings' | '/transactions' | '/agents'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/pricing'
    | '/settings'
    | '/transactions'
    | '/agents/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  PricingRoute: typeof PricingRoute
  SettingsRoute: typeof SettingsRoute
  TransactionsRoute: typeof TransactionsRoute
  AgentsIndexRoute: typeof AgentsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  PricingRoute: PricingRoute,
  SettingsRoute: SettingsRoute,
  TransactionsRoute: TransactionsRoute,
  AgentsIndexRoute: AgentsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/pricing",
        "/settings",
        "/transactions",
        "/agents/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/transactions": {
      "filePath": "transactions.tsx"
    },
    "/agents/": {
      "filePath": "agents/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
